{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","name","type","id","mode","onClick","toggle","role","htmlFor","TextForm","useState","text","setText","style","color","heading","paragraph","backgroundColor","border","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","msg","App","Mode","setMode","setalert","message","setTimeout","body","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ec75d619.chunk.js","sourcesContent":["// write rfc to biuld the following functional components\r\nimport React from 'react'\r\n// import { Link } from 'react-router-dom'\r\nimport './Navbar.css'\r\n// import { a } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg bg-dark bg-dark`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.name}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-a\" href=\"/about\">About</a>\r\n              </li> */}\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggle} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode===\"light\"?\"Enable Dark Mode\":\"Disable Dark Mode\"}</label>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    // function lines\r\n    const handleUPclick = ()=>{\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to UpperCase\" , \"success\")\r\n    }\r\n    const handleLPclick = ()=>{\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to LowerCase\" , \"success\")\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)  // Changing the State\r\n        // console.log(\"Onchange Was Clicked\");\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        var text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Copied to ClipBoard\" , \"success\")\r\n    }\r\n\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra Spaces Removed\" , \"success\")\r\n    }\r\n\r\n    function eraseText() {\r\n        console.log(\"cleared\")\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Your Text Is  Cleared\" , \"success\")\r\n    }\r\n\r\n\r\n\r\n    // code lines\r\n    const [text, setText] = useState(\"Enter The Text Here\");\r\n    // setText(\"Tushar tiwari\");\r\n    return (\r\n        <>\r\n        <div className=\"container my-5\"style={{color:props.mode === 'dark'?'white':'#161734'}}>\r\n            <h3>{props.heading}</h3>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"myBox\" className=\"form-label\">{props.paragraph}</label>\r\n                <textarea className=\"form-control\" style={{backgroundColor:props.mode === 'dark'?'#161734':'white',color:props.mode === 'dark'?'white':'#161734',border:props.mode === 'dark'?'2px solid white':'2px solid black'}}  value = {text} onChange={handleOnChange} id=\"myBox\" rows=\"8\" ></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={handleUPclick} >Convert To UpperCase</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLPclick} >Convert To LowerCase</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={eraseText} >Clear Text</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy} >Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces} >Remove Extra Spaces</button>\r\n        </div>\r\n\r\n\r\n        <div className=\"container my-3\" style={{color:props.mode === 'dark'?'white':'#161734'}}>\r\n            <h3>Your Text is here</h3>\r\n            <p>{text.split(\" \").length} Words {text.length} Are The Characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n            <h3>Preview Of Your Text</h3>\r\n            <p>{text.length>0?text:\"Enter Something Above To preview it Here\" }</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert'\n\n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const [Mode, setMode] = useState('light')\n\n  const [alert, setalert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if (Mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#161734';\n      showAlert(\"Dark Mode is Enabled\", \"success\")\n      document.title = \"TextUtils - Dark Mode\"\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = '#f8f9fa';\n      showAlert(\"Light Mode is Enabled\", \"success\")\n      document.title = \"TextUtils - Light Mode\"\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n\n\n      <Navbar name=\"Tushar's TextUtils\" mode={Mode} toggle={toggleMode} />\n\n      <Alert alert={alert} />\n      <div className=\"container\">\n        <TextForm showAlert={showAlert} heading=\"Please Enter Your Text Below!!!\"\n          paragraph=\"Enter text (copy and paste is fine) here: \" mode={Mode} />\n      </div>\n\n      \n      {/* <Routes> */}\n\n      {/* <Route exact path='/' element={<TextForm showAlert={showAlert} heading=\"Please Enter Your Text Below!!!\"\n              paragraph=\"Enter text (copy and paste is fine) here: \" mode={Mode} />}></Route> */}\n\n      {/* <Route exact path='/about' element={< About />}></Route> */}\n\n      {/* </Routes> */}\n\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}